name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'production'
        type: choice
        options: [ production ]

permissions:
  contents: read

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci || npm install
      - name: Run tests
        run: npm test

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Trigger Render deployment
        if: ${{ secrets.RENDER_DEPLOY_HOOK_URL != '' }}
        run: |
          echo "üöÄ Triggering Render deploy hook"
          curl -sSf -X POST "$RENDER_DEPLOY_HOOK_URL" || {
            echo "‚ö†Ô∏è Render deploy hook failed or not configured"; exit 1;
          }
        env:
          RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}

      - name: Wait for deployment to start
        run: sleep 30

      - name: Health check (production)
        run: |
          PROD_URL=${{ secrets.PRODUCTION_URL || 'https://vpco.onrender.com' }}
          echo "üè• Checking $PROD_URL/api/health"
          for i in {1..10}; do
            CODE=$(curl -s -o /dev/null -w "%{http_code}" "$PROD_URL/api/health")
            if [ "$CODE" = "200" ]; then
              echo "‚úÖ Health check passed"; exit 0;
            fi
            echo "Attempt $i failed (HTTP $CODE). Retrying in 10s..."; sleep 10;
          done
          echo "‚ùå Health check failed"; exit 1;

      - name: Verify core endpoints
        run: |
          PROD_URL=${{ secrets.PRODUCTION_URL || 'https://vpco.onrender.com' }}
          echo "Testing /api/services"; curl -fsS "$PROD_URL/api/services" >/dev/null || exit 1
          echo "Testing /api/about"; curl -fsS "$PROD_URL/api/about" >/dev/null || exit 1

      - name: Notify (Slack)
        if: ${{ always() && secrets.SLACK_WEBHOOK_URL != '' }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          STATUS: ${{ job.status }}
        run: |
          if [ "$STATUS" = "success" ]; then EMOJI=‚úÖ; TEXT="Deployment successful"; else EMOJI=‚ùå; TEXT="Deployment failed"; fi
          curl -s -X POST "$SLACK_WEBHOOK_URL" -H 'Content-Type: application/json' -d "{\"text\": \"$EMOJI $TEXT (branch: $GITHUB_REF_NAME)\"}" || true
